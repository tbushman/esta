script(type="text/javascript").
	Vue.prototype.moment = moment;
	Vue.prototype.marked = marked;
	Vue.prototype.$ = $;
	Vue.prototype.window = window;
	if (typeof tinymce === 'object') Vue.prototype.tinymce = tinymce;
	new Vue({
		el: '#vue',
		data: function data(){
			return {
				searchReady: false,
				searchResults: [],

				dragging: {isDragging: false, y: 0},
				dropped: {drop: false, layers: false, new: false},
				initbounds: null,
				tempstyles: [],
				colorTimeout: null,
				buf: null,
				//- attribute: null,
				//- attributes: [],
				availablelayers: this.ifNullThenArr(!{JSON.stringify(availablelayers)}),
				c: ["#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c","#fdbf6f","#ff7f00","#cab2d6","#6a3d9a","#ffff99","#b15928","#1f77b4","#ff7f0e","#2ca02c","#d62728","#9467bd","#8c564b","#e377c2","#7f7f7f","#bcbd22","#17becf"],
				//['#39B54A', '#D9E021', '#FBB03B', '#FC644D', '#ED1C24'],
				//- lvl: 'h',
				wWidth: window.innerWidth,
				wHeight: window.innerHeight,
				btn: { x: (window.innerWidth / 2), 
					y: (window.innerHeight/ 2),
					r: 21,
					vis: (!this.mapActive || !this.mapEdit ? null : 'block')
				},
				//- h: 0,
				//- i: 0,
				//- j: 0,
				//- m: 0,
				signable: this.parseBool(!{JSON.stringify(signable)}),
				unsigned: this.parseBool(!{JSON.stringify(unsigned)}),
				avail: this.parseBool(!{JSON.stringify(avail)}),
				type: this.parseObj(!{JSON.stringify(type)}),
				pu: this.parsePu(!{JSON.stringify(pu)}),
				loggedin: (this.parseObj(!{JSON.stringify(session)}) !== '' && this.parseObj(!{JSON.stringify(session.loggedin)}) !== '' ? this.parseObj(!{JSON.stringify(session.loggedin)}) : null ),
				menu: this.parseObj(!{JSON.stringify(menu)}),
				dat: this.parseObj(!{JSON.stringify(dat)}),
				doc: this.parseObj(!{JSON.stringify(doc)}),
				layers: this.parseObj(!{JSON.stringify(layers)}),
				position: (!this.parseObj(!{JSON.stringify(session.position)}) ? {lat: 40, lng: -111.89, zoom: 6}/*null*/ : this.parseObj(!{JSON.stringify(session.position)})),
				edit: (this.parseObj(!{JSON.stringify(doc)}) === '' ? null : this.parseObj(!{JSON.stringify(doc)}).index),
				//- chindexes: [],
				chindex: 0,
				//- dindexes: [],
				did: (this.parseObj(!{JSON.stringify(doc)}) === '' ? null : this.parseObj(!{JSON.stringify(doc)})._id),
				cursor: null,
				//- input: '',
				//- fixedPug: '',
				map: '',
				mapActive: (this.parseBool(!{JSON.stringify(mapActive)})),
				mapReady: false,
				mapEdit: false,
				mapEditable: false,
				dataLayer: '',
				lMarker: '',
				thickness: 65,
				res: this.isResponsive(),
				dPath: this.dPathAttr(),
				tinymce: '',
				dfi: 0,
				diff: null,
				web: true,
				export: this.parseBool(!{JSON.stringify(exports)}),
				ff: this.parseObj(!{JSON.stringify(ff)}),
				newDoc: {tempGeo:[],placetype:'',place:null,tiind:null,xmlid:'',chind:null,chtitle:''},						
				placemenu: false,
				
				placetypes: [{
					ind: 0,
					name: 'Nation',
					url: '/json/usstates.json'
				},
				{
					ind: 1,
					name: 'State',
					url: '/json/usstates.json'
				},
				{
					ind: 2,
					name: 'County',
					url: '/json/uscounties.json'
				}],
				modal: {msg:null},
				uploadisreplace: false,
				uploadchtitle: null,
				dragind: null,
				latlngs: null,
				//- gp: (this.parseObj(#{session.importgdrive}) !== '' ? this.parseObj(!{JSON.stringify(gp)}) : null),
				sliderIndex: 1,
				sliderInterval: '',
				sliderTimeout1: '',
				sliderTimeout2: '',
				str: this.parseObj(!{JSON.stringify(str)}),
				ts: this.ifNullThenArr(!{JSON.stringify(ts)}),
				can: [],
				lyr: {},
				geo: [],
				tis: [
					{
						ind: 0,
						name: 'in support of legislation',
						code: 'BILLS-',
						chapter: [
							{
								ind: 115,
								name: 'United States Congress',
								code: 'hres',
								section: [
									{
										ind: 108,
										name: 'House Simple Resolution (H. Res.)',
										code: 'ih'
									}
								]
							}
						]
					},
					{
						ind: 1,
						name: 'in Solidarity',
						chapter: [
							{
								ind: 0,
								name: 'Jurisdiction'
							}
						]
					},
					{
						ind: 2,
						name: 'Candidate for Public Office',
						chapter: [
							{
								ind: 0,
								name: 'Jurisdiction'
							}
						]
					},
					{
						ind: 3,
						name: 'Environmental Impact Statement',
						chapter: [
							{
								ind: 0,
								name: 'Jurisdiction'
							}
						]
					},
					{
						ind: 4,
						name: 'Geography',
						chapter: [
							{
								ind: 0,
								name: 'Jurisdiction'
							}
						]
					}
				],
				xml: //this.parseXML(
					this.parseObj(!{JSON.stringify(xml)})
				//)
				,
				xmlnode: '',
				accordions: [[]],
				sliderOpacity: 1,
				gpo: null,
				latlng: {lat: 40, lng: -111.8},
				//- lyrs: [],
				base: 0,
				baseMaps: [
					{
						url: 'https://api.mapbox.com/styles/v1/tbushman/ciq7gm0ov008kbfm580v9mm9c/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoidGJ1c2htYW4iLCJhIjoiSmI0aU94OCJ9.SZytljBzoWupPUYeu_OR9A',
						attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> &copy; <a href="http://cartodb.com/attributions">CartoDB</a>'
					},
					{
						url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',
						attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'
					}
					
				],
				zfactor: (0.01 * (!this.map ? 6 : (18 - this.map.getZoom() ) )),
				cZF: null,
				viewerList: false,
				censusVars: null,
				censusLoad: {tempGeo:[],placetype:'',cats:null,cat:null} ,
				json: {}
				
			}
		},
		watch: {
			accordions: {
				deep: true,
				handler(accordions) {
					var self = this;
					self.accordions = accordions
				}
			}
		},
		
		updated: function(){
			var self = this;
			//- if (self.colorTimeout) clearTimeout(self.colorTimeout);
		},
		mounted: function(){
			$(document).ready(function(){
				document.addEventListener('keydown', function(event) {
					var keyName = event.key;
					if (keyName === 'Enter') event.preventDefault()
				});
				//- setTimeout(function(){
				//- 	$('.submenu.drop').slideUp(100);
				//- 	$('.slidedown').slideUp(100);
				//- },3000)

			})
			var self = this;
			$(document).on('click', '.href', function(e){
				e.stopPropagation();
			});
			var modal = document.getElementById('modal');

			if (!self.doc || self.doc === '') {
				if (!self.dat || self.dat === '') {
					self.accordions = [[]];
				} else {
					self.accordions = self.dat.map(function(data){
						return []
					});
				}
			} else {
				if (!self.dat || self.dat === '') {
					self.accordions = [[self.doc.index]];
				} else {
					self.accordions = self.dat.map(function(data){return data.map(function(doc){return doc.index})});
				}
				self.edit = self.doc._id;
				self.did = self.edit;
				
			}

			window.addEventListener('resize', self.resizeFrame);


			if ($('#slider')[0] && (!self.sliderInterval || self.sliderInterval === '')) {
				var int = 8000;
				self.sliderImg(int)
			}
			self.res = self.isResponsive()

		},
		beforeDestroy: function(){
			//TODO clearTimout
			var self = this;
			clearInterval(self.sliderInterval);
			clearTimeout(self.sliderTimeout1);
			clearTimeout(self.sliderTimeout2)
			if (self.colorTimeout) clearTimeout(self.colorTimeout);
			window.removeEventListener('resize', self.resizeFrame)

		},
		methods: Object.assign({}, baseFunctions, mapFunctions, adminFunctions)
	});

