- var menus = [ 'static', '' ]

each mn, k in menus
	div.menu(class= mn)
		a.mainmenu(class= mn, title="Menu", style="pointer-events: auto;")
			
			svg(version="1.1", xmlns="http://www.w3.org/2000/svg", xmlns:xlink="http://www.w3.org/1999/xlink", x="0px", y="0px", width="30.1px", height="25px", viewBox="0 0 30.1 28", style="enable-background:new 0 0 30.1 28; padding: 0 0 0 8px;", xml:space="preserve")
				path(style="fill:#000;", d="M1.103,4.464c-0.606,0-1.1-0.493-1.1-1.1v-2.3c0-0.606,0.493-1.1,1.1-1.1h27.893  c0.607,0,1.1,0.494,1.1,1.1v2.3c0,0.606-0.492,1.1-1.1,1.1H1.103z")
				path(style="fill:#000;", d="M1.103,16.464c-0.606,0-1.1-0.493-1.1-1.1v-2.3c0-0.606,0.493-1.101,1.1-1.101h27.893  c0.607,0,1.1,0.494,1.1,1.101v2.3c0,0.606-0.492,1.1-1.1,1.1H1.103z")
				path(style="fill:#000;", d="M1.103,27.962c-0.606,0-1.1-0.494-1.1-1.1v-2.301c0-0.605,0.493-1.1,1.1-1.1h27.893  c0.607,0,1.1,0.494,1.1,1.1v2.301c0,0.605-0.492,1.1-1.1,1.1H1.103z")


		if (mn === 'static')
			div.dropdown.static(style="float: left; left:6px; right:auto; display: flex;height:45px;overflow-y:hidden!important;")
				a.submenu.drop(href="/", class= mn, style="max-height:45px;")
					span esta.bli.sh
		div.dropdown(class= mn)
			
			a.submenu.drop(class= mn, href="/")
				span.tb-font-s Home
			
			a.submenu.drop(v-if="loggedin && pu && pu !== '' && pu.properties.admin", class= mn, title="New")
				span.tb-font-s New
			
			div.slidedown(v-if="loggedin && pu && pu !== '' && pu.properties.admin", class= mn)
				
				label(for="placetype") Type of jurisdiction
				select#placetype(style="pointer-events: all;", name="placetype",@change="changePlaceType($event)")
					option(value="null", v-text="'None'", v-bind:selected="!newDoc.placetype")
					option(v-for="(pl, p) in placetypes", v-text="pl.name", :value="pl.name")
				label(for="placetype") Jurisdiction
				select#place(style="pointer-events: all;", @change="changePlaceNew($event)", name="place", v-model="newDoc.place")
					option(value="null", v-text="'None'", v-bind:selected="!newDoc.place")
					option(v-if="newDoc.tempGeo.length", v-for="(geo, i) in newDoc.tempGeo", v-text="geo.properties.name", :value="i", :selected="newDoc.place === i")

				label(for="doctype") Type of document
				select#doctype(style="pointer-events: all;", @change="changeDocType($event)", name="tiind", v-model="newDoc.tiind")
					option(value="null", v-text="'None'", v-bind:selected="!newDoc.tiind")
					option(v-for="(tp, j) in tis", v-text="tp.name", :value="j", :selected="newDoc.tiind === j")

				input(type="hidden", :value="newDoc.tiind")
				input(type="hidden", :value="newDoc.chind")
				input(type="hidden", :value="newDoc.xmlid")
				label(for="placetype") Search Document Title
				input(type="text", title="search GPO", @change="filterGpo($event)", v-text="'Search Bills'")
				select#gpoapi(v-if="newDoc.placetype && newDoc.placetype === 'Nation' && gpo", @change="setXmlId($event)")
					option(value="null", v-text="'None'", v-bind:selected="!newDoc.chtitle")
					option(v-for="(ct, l) in gpo.packages", v-text="ct.title", :value="l")
				input(v-if="newDoc.placetype !== 'Nation'", type="text", id="chtitle", v-model="newDoc.chtitle")
				a(role="button", title="Create", :href="'/api/new/'+newDoc.placetype+'/'+newDoc.place+'/'+newDoc.tiind+'/'+newDoc.chind+'/'+newDoc.secind+'/'+encodeURIComponent(newDoc.chtitle)+'/'+newDoc.xmlid+''", style="margin-bottom: 50px") Create
			
			a.submenu.drop(v-if="loggedin && doc && pu && pu !== '' && pu.properties.admin", class= mn, title="Export", :href="'/api/exportword/'+doc._id+''")
				span.tb-font-s Export
			//- div.slidedown(v-if="loggedin", class= mn)
			//- 	a.submenu.drop(class= mn, href="/api/exportword")
			//- 		if (mn !== "static")
			//- 			if (menu !== "word")
			//- 				.ui(class= mn)
			//- 					include angle.pug
			//- 		span.tb-font-s Download Word file
				
				//- a.submenu.drop(class= mn, href="/api/exportgdrivewhole")
				//- 	if (mn !== "static")
				//- 		if (menu !== "word")
				//- 			.ui(class= mn)
				//- 				include angle.pug
				//- 	span.tb-font-s Save to Google Drive
			a.submenu.drop(class= mn, v-if="loggedin && loggedin !== ''", href="/sig/editprofile", title="View and edit your profile")
				span.tb-font-s Profile

			a.submenu.drop(v-if="!loggedin", class= mn, href="/login")
				span.tb-font-s(v-text="'Login'")
			a.submenu.drop(v-if="loggedin", class= mn, href="/logout")
				span.tb-font-s Logout

				//- a.submenu.drop(v-if="loggedin", class= mn, title="Import")
				//- 	span.tb-font-s Import
				//- div.slidedown(v-if="loggedin", class= mn)
				//- 
				//- 	a.submenu.drop(class= mn, href="/importgdrive", title="Import Chapter from Google Drive")
				//- 		if (mn !== "static")
				//- 			if (menu !== "word")
				//- 				.ui(class= mn)
				//- 					include angle.pug
				//- 		span.tb-font-s Google Drive
				//- 	if (menu !== "word")
				//- 		div.submenu.drop.spacer(class= mn, style="padding-left: "+(mn === 'static' ? '10px' : '0')+"; padding-bottom:10px;pointer-events:all;")
				//- 			if (mn !== "static")
				//- 				.ui(class= mn)
				//- 					include angle.pug
				//- 
				//- 			label.tb-font-s(for="importword") MS Word
				//- 			input.block#importword(class= mn, v-on:change="uploadDocx", type="file", value="Import Docx")
				//- 
				//- 	div.submenu.drop(class= mn, style="padding-left: "+(mn === 'static' ? '10px' : '0')+";pointer-events:all;")
				//- 		if (mn !== "static")
				//- 			if (menu !== "word")
				//- 				.ui(class= mn)
				//- 					include angle.pug
				//- 		label.tb-font-s(for="importtxt") Plain .txt
				//- 		input.block#importtxt(v-on:change="importTxt", class= mn, type="file", value="Import TXT", ref="myImportTxt")
				//- if (menu === "publish")
				//- a.submenu.drop(class= mn, v-if="dat[0] !== undefined && dat[0][0] !== undefined && dat[0][0].properties.section.ind !== '000'", v-bind:href="'/api/coverimg/'+encodeURIComponent(dat[0][0].properties.chapter.ind)", v-bind:title="'Add Cover to Ch. '+(parseInt(dat[0][0].properties.chapter.ind,10)+1)+''")
				//- 	span.tb-font-s(v-text="'Add Cover to Ch. '+dat[0][0].properties.chapter.ind+''")

				//- a.submenu.drop(class= mn, 
				//- 	v-if="dat && dat.length === 1 && pu && pu !== '' && pu.properties.admin", 
				//- 	v-bind:href="'/api/new/'+encodeURIComponent(dat[0][0].properties.chapter.str)", 
				//- 	v-bind:title="'Add Section to Ch. '+(parseInt(dat[0][0].properties.chapter.ind,10)+1)+''"
				//- 	)
				//- 	span.tb-font-s(v-text="'Add Section to Ch. '+(parseInt(dat[0][0].properties.chapter.ind,10)+1)+''")

				//- if (menu === "map")
				//- 	a.submenu.drop(v-if="loggedin", class= mn, v-on:click="addMapBlob")
				//- 		span.tb-font-s(v-text="'Save Map'")
				//
					a.submenu.drop(class= mn, v-bind:href="'/exportpdf'")
						span.tb-font-s(v-text="'Export PDF file'")

